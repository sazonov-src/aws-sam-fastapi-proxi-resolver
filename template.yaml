AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless patterns - Cognito User Pool (uksb-1tthgi812) (tag:cognito-user-pool)

Parameters:
  CallbackUrl:
    Type: String

Globals:
  Function:
    Runtime: python3.12
    CodeUri: src/

Resources:
  
  CognitoAuthorizerUserPool:
    Type: AWS::Cognito::UserPool
    Properties: 
      UserPoolName: cognito-user-pool-userpool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  CognitoAuthorizerUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties: 
      AllowedOAuthFlows: 
        - implicit
      AllowedOAuthFlowsUserPoolClient: True
      AllowedOAuthScopes: 
        - email
        - openid
        - profile
      CallbackURLs: 
        - !Ref CallbackUrl
      ClientName: cognito-user-pool-client
      SupportedIdentityProviders: 
        - COGNITO
      UserPoolId: !Ref CognitoAuthorizerUserPool
      ExplicitAuthFlows:
        - ALLOW_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH

  CognitoAuthorizerUserPoolResourceServer:
    Type: AWS::Cognito::UserPoolResourceServer
    Properties: 
      Identifier: com.apigw
      Name: com.apigw
      Scopes: 
        - ScopeDescription: scope_description
          ScopeName: scope_name
      UserPoolId: !Ref CognitoAuthorizerUserPool
      
  CognitoAuthorizerUserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties: 
      Domain: !Sub user-pool-domain-${AWS::AccountId}
      UserPoolId: !Ref CognitoAuthorizerUserPool

  CognitoAuthorizerUserPoolGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Administrators
      Description: "Administrators group"
      UserPoolId: !Ref CognitoAuthorizerUserPool

  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: user-pool-api

  ApiGatewayCognitoAuthorizer:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoAuthorizer
      Type: COGNITO_USER_POOLS
      IdentitySource: method.request.header.Authorization
      RestApiId: !Ref ApiGateway
      ProviderARNs:
        - !Sub "arn:aws:cognito-idp:${AWS::Region}:${AWS::AccountId}:userpool/${CognitoAuthorizerUserPool}"

  CustomerApp:
    Type: AWS::Serverless::Application
    Properties:
      Location: customer/template.yaml
      Parameters:
        ApiGateway: !Ref ApiGateway
        ApiGatewayCognitoAuthorizer: !Ref ApiGatewayCognitoAuthorizer
        ApiGatewayRootResourceId: !GetAtt ApiGateway.RootResourceId


Outputs:

  HostedUi:
    Description: Hosted UI
    Value: !Sub "https://${CognitoAuthorizerUserPoolDomain}.auth.${AWS::Region}.amazoncognito.com/login?client_id=${CognitoAuthorizerUserPoolClient}&response_type=token&scope=email+openid+profile&redirect_uri=${CallbackUrl}"

  ApiGateway:
    Description: API Gateway ID
    Value: !Ref ApiGateway

  ApiGatewayCognitoAuthorizer:
    Description: API Gateway Cognito Authorizer ID
    Value: !Ref ApiGatewayCognitoAuthorizer

  CognitoUserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref CognitoAuthorizerUserPool

  CognitoUserPoolClientId:
    Description: Cognito User Pool Client ID
    Value: !Ref CognitoAuthorizerUserPoolClient

  CognitoUserPoolDomain:
    Description: Cognito User Pool Domain
    Value: !Sub "${CognitoAuthorizerUserPoolDomain}.auth.${AWS::Region}.amazoncognito.com"

